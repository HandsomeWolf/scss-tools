@charset "UTF-8";
@mixin vertical-center-transform {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}
@mixin vertical-center-align {
  $selector: &;

  @at-root {
    #{$selector}::after {
      display: inline-block;
      content: "";
      height: 100%;
      vertical-align: middle;
    }
  }
}
@mixin horizontal-center($width) {
  margin-left: auto;
  margin-right: auto;
  width: $width;
}
@mixin absolute-center {
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
}

@mixin vertical-center-text($height) {
  height: $height;
  line-height: $height;
}

@mixin size($width, $height: $width) {
  height: $height;
  width: $width;
}

@mixin clearfix {
  &::after {
    clear: both;
    content: "";
    display: block;
  }
}

@mixin aspect-ratio($width, $height) {
  position: relative;

  &::before {
    content: "";
    display: block;
    padding-top: ($height / $width) * 100%;
  }

  > * {
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }
}

@mixin flex(
  $direction: row,
  $wrap: nowrap,
  $content: center,
  $justify: center,
  $items: center,
  $display: flex
) {
  align-content: $content;
  align-items: $items;
  display: $display;
  flex-flow: $direction $wrap;
  justify-content: $justify;
}

@mixin flex-start {
  @include flex($justify: flex-start);
}

@mixin flex-end {
  @include flex($justify: flex-end);
}

@mixin flex-center {
  @include flex;
}

@mixin flex-between {
  @include flex($justify: space-between);
}

@mixin flex-around {
  @include flex($justify: space-around);
}

@mixin flex-evenly {
  @include flex($justify: space-evenly);
}

@mixin inline-flex-start {
  @include flex($justify: flex-start, $display: inline-flex);
}

@mixin inline-flex-end {
  @include flex($justify: flex-end, $display: inline-flex);
}

@mixin inline-flex-center {
  @include flex($display: inline-flex);
}

@mixin inline-flex-between {
  @include flex($justify: space-between, $display: inline-flex);
}

@mixin inline-flex-around {
  @include flex($justify: space-around, $display: inline-flex);
}

@mixin inline-flex-evenly {
  @include flex($justify: space-evenly, $display: inline-flex);
}

@mixin position($position: relative, $box-edge-values) {
  $box-edge-values: unpack-shorthand($box-edge-values);

  $offsets: (
    "top": list.nth($box-edge-values, 1),
    "right": list.nth($box-edge-values, 2),
    "bottom": list.nth($box-edge-values, 3),
    "left": list.nth($box-edge-values, 4),
  );

  position: $position;

  @each $offset, $value in $offsets {
    @if is-length($value) {
      #{$offset}: $value;
    }
  }
}

// 参考《CSS揭秘》
